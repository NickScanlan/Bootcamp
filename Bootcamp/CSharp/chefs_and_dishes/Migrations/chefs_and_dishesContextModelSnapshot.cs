// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using chefs_and_dishes.Models;

#nullable disable

namespace chefs_and_dishes.Migrations
{
    [DbContext(typeof(chefs_and_dishesContext))]
    partial class chefs_and_dishesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("chefs_and_dishes.Models.Chefs", b =>
                {
                    b.Property<int>("chefID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("chefID");

                    b.ToTable("Chefs");
                });

            modelBuilder.Entity("chefs_and_dishes.Models.Dishes", b =>
                {
                    b.Property<int>("dishID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ChefNamechefID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("calories")
                        .HasColumnType("int");

                    b.Property<int>("chefID")
                        .HasColumnType("int");

                    b.Property<string>("dish_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("tastiness")
                        .HasColumnType("int");

                    b.HasKey("dishID");

                    b.HasIndex("ChefNamechefID");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("chefs_and_dishes.Models.Dishes", b =>
                {
                    b.HasOne("chefs_and_dishes.Models.Chefs", "ChefName")
                        .WithMany("NumofDishes")
                        .HasForeignKey("ChefNamechefID");

                    b.Navigation("ChefName");
                });

            modelBuilder.Entity("chefs_and_dishes.Models.Chefs", b =>
                {
                    b.Navigation("NumofDishes");
                });
#pragma warning restore 612, 618
        }
    }
}
